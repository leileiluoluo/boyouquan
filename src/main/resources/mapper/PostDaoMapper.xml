<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boyouquan.dao.PostDaoMapper">
    <sql id="insert_columns">
        link,
        blog_domain_name,
        title,
        description,
        published_at,
        draft,
        deleted
    </sql>
    <sql id="select_columns">
        link,
        blog_domain_name as blogDomainName,
        title,
        description,
        published_at as publishedAt,
        draft,
        deleted
    </sql>
    <select id="getMostPublishedInLatestOneMonth" resultType="com.boyouquan.model.BlogDomainNamePublish">
        SELECT
        blog_domain_name as blogDomainName,
        COUNT(*) as postCount
        FROM post
        WHERE draft=false
        AND deleted=false
        AND date(published_at) >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)
        GROUP BY blog_domain_name
        ORDER BY postCount DESC LIMIT 1
    </select>
    <select id="countWithKeyWord" resultType="java.lang.Long">
        SELECT
        COUNT(*)
        FROM post
        WHERE draft=false
        AND deleted=false
        <if test="keyword != null and keyword !=''">
            AND title LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </select>
    <select id="listWithKeyWord" resultType="com.boyouquan.model.Post">
        SELECT
        <include refid="select_columns"/>
        FROM post
        WHERE draft=false
        AND deleted=false
        <if test="keyword != null and keyword !=''">
            AND title LIKE CONCAT('%', #{keyword}, '%')
        </if>
        ORDER BY published_at DESC
        LIMIT #{offset}, #{rows}
    </select>
    <select id="countAll" resultType="java.lang.Long">
        SELECT
        COUNT(*)
        FROM post
        WHERE draft=false
        AND deleted=false
    </select>
    <select id="getLatestPublishedAtByBlogDomainName" resultType="java.util.Date">
        SELECT
        MAX(published_at)
        FROM post
        WHERE draft=false
        AND deleted=false
        AND blog_domain_name=#{blogDomainName}
        ORDER BY published_at DESC
    </select>
    <select id="countByBlogDomainName" resultType="java.lang.Long">
        SELECT
        COUNT(*)
        FROM post
        WHERE draft=false
        AND deleted=false
        AND blog_domain_name=#{blogDomainName}
    </select>
    <select id="listByDraftAndBlogDomainName" resultType="com.boyouquan.model.Post">
        SELECT
        <include refid="select_columns"/>
        FROM post
        WHERE deleted=false
        AND draft=#{draft}
        AND blog_domain_name=#{blogDomainName}
        ORDER BY published_at DESC
        LIMIT #{limit}
    </select>
    <select id="getByLink" resultType="com.boyouquan.model.Post">
        SELECT
        <include refid="select_columns"/>
        FROM post
        WHERE link=#{link}
    </select>
    <select id="existsByLink" resultType="boolean">
        SELECT
        EXISTS (
        SELECT 1 FROM post WHERE link=#{link}
        )
    </select>
    <insert id="batchSave" parameterType="java.util.List">
        INSERT INTO post (
        <include refid="insert_columns"/>
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.link},
            #{item.blogDomainName},
            #{item.title},
            #{item.description},
            #{item.publishedAt},
            #{item.draft},
            false
            )
        </foreach>
    </insert>
    <update id="batchUpdateDraftByBlogDomainName">
        UPDATE post
        SET draft=#{draft}
        WHERE blog_domain_name=#{blogDomainName}
    </update>
    <delete id="deleteByBlogDomainName">
        DELETE
        FROM post
        WHERE blog_domain_name=#{blogDomainName}
    </delete>
</mapper>
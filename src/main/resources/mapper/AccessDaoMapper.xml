<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boyouquan.dao.AccessDaoMapper">
    <sql id="insert_columns">
        link,
        blog_domain_name,
        ip,
        accessed_at
    </sql>
    <select id="countAll" resultType="java.lang.Long">
        SELECT
        COUNT(*)
        FROM access
    </select>
    <select id="getMostAccessedBlogDomainNameInLatestOneMonth" resultType="com.boyouquan.model.BlogDomainNameAccess">
        SELECT
        blog_domain_name as blogDomainName,
        COUNT(*) as accessCount
        FROM access
        WHERE date(accessed_at) >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)
        GROUP BY blog_domain_name
        ORDER BY accessCount DESC LIMIT 1
    </select>
    <select id="getBlogAccessSeriesInLatestOneMonth" resultType="com.boyouquan.model.DayAccess">
        SELECT DATE_FORMAT(date,'%m/%d') AS day,IFNULL(data.num, 0) AS count
        FROM (
        SELECT @days := DATE_ADD(@days, INTERVAL - 1 DAY) AS date
        FROM (SELECT @days := DATE_ADD(CURDATE(), INTERVAL + 1 DAY)
        FROM access
        ) day
        WHERE DATE_FORMAT(@days, '%m/%d') >=
        DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 29 DAY), '%m/%d')
        ORDER BY date
        ) dates
        LEFT JOIN (
        SELECT COUNT(1) AS num, DATE(accessed_at) AS time
        FROM access
        WHERE blog_domain_name=#{blogDomainName}
        AND DATE_FORMAT(accessed_at, '%m/%d %H:%i:%S') >=
        DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 30 DAY), '%m/%d %H:%i:%S')
        GROUP BY DATE(accessed_at)
        ) data ON DATE(time) = date
        ORDER BY date
    </select>
    <select id="countByBlogDomainName" resultType="java.lang.Long">
        SELECT
        COUNT(*)
        FROM access
        WHERE blog_domain_name=#{blogDomainName}
    </select>
    <select id="countByLink" resultType="java.lang.Long">
        SELECT
        COUNT(*)
        FROM access
        WHERE link=#{link}
    </select>
    <insert id="save">
        INSERT INTO access (
        <include refid="insert_columns"/>
        ) VALUES (
        #{link},
        #{blogDomainName},
        #{ip},
        now()
        )
    </insert>
</mapper>
package com.boyouquan.service.impl;

import java.util.List;

public class Test {

    private static String getPostCountExceedPercent(int count) {
        List<Integer> blogPostCounts = List.of(326,
                234,
                233,
                232,
                210,
                197,
                197,
                190,
                173,
                170,
                166,
                165,
                163,
                145,
                143,
                140,
                138,
                135,
                119,
                118,
                115,
                109,
                108,
                103,
                102,
                101,
                101,
                98,
                97,
                94,
                94,
                93,
                92,
                91,
                91,
                89,
                85,
                84,
                79,
                76,
                76,
                75,
                73,
                72,
                72,
                71,
                71,
                68,
                68,
                67,
                67,
                67,
                66,
                66,
                65,
                65,
                65,
                64,
                63,
                63,
                61,
                61,
                60,
                60,
                59,
                59,
                58,
                58,
                57,
                56,
                55,
                55,
                55,
                55,
                55,
                54,
                54,
                54,
                53,
                53,
                53,
                53,
                53,
                53,
                53,
                52,
                51,
                51,
                51,
                51,
                49,
                49,
                49,
                48,
                48,
                48,
                48,
                47,
                47,
                46,
                46,
                46,
                46,
                45,
                45,
                45,
                45,
                45,
                45,
                45,
                44,
                44,
                43,
                43,
                43,
                42,
                42,
                42,
                41,
                41,
                40,
                40,
                39,
                39,
                39,
                39,
                39,
                39,
                38,
                38,
                38,
                38,
                38,
                37,
                37,
                37,
                36,
                36,
                36,
                36,
                36,
                35,
                35,
                35,
                35,
                34,
                34,
                34,
                33,
                33,
                33,
                33,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                31,
                31,
                31,
                30,
                30,
                30,
                30,
                30,
                30,
                30,
                30,
                29,
                29,
                29,
                29,
                29,
                29,
                29,
                29,
                28,
                28,
                28,
                28,
                28,
                27,
                27,
                27,
                27,
                27,
                27,
                26,
                26,
                26,
                26,
                26,
                25,
                25,
                25,
                25,
                24,
                24,
                24,
                24,
                24,
                23,
                23,
                23,
                23,
                23,
                23,
                23,
                23,
                22,
                22,
                22,
                22,
                22,
                22,
                22,
                22,
                22,
                22,
                21,
                21,
                21,
                21,
                21,
                21,
                21,
                21,
                21,
                21,
                20,
                20,
                20,
                20,
                20,
                20,
                20,
                20,
                20,
                20,
                19,
                19,
                19,
                19,
                19,
                19,
                19,
                19,
                19,
                19,
                18,
                18,
                18,
                18,
                18,
                18,
                18,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                17,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                15,
                15,
                15,
                15,
                15,
                15,
                15,
                15,
                15,
                15,
                15,
                15,
                15,
                14,
                14,
                14,
                14,
                14,
                14,
                14,
                14,
                14,
                13,
                13,
                13,
                13,
                13,
                13,
                13,
                13,
                13,
                13,
                13,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                12,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                11,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                10,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);

        if (blogPostCounts.isEmpty()
                || blogPostCounts.size() == 1) {
            return "0%";
        }

        int size = blogPostCounts.size() - 1;
        int[] thresholds = {5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95};
        String[] percentages = {"95%", "90%", "85%", "80%", "75%", "70%", "65%", "60%", "65%", "50%", "45%", "40%", "35%", "30%", "25%", "20%", "15%", "10%", "5%"};

        for (int i = 0; i < thresholds.length; i++) {
            if (count > blogPostCounts.get(getIndex(size, thresholds[i]))) {
                return percentages[i];
            }
        }
        return "0%";
    }

    private static int getIndex(int size, int percent) {
        return size * percent / 100;
    }

    public static void main(String[] args) {
        System.out.println(getPostCountExceedPercent(2));
    }

}
